# Questions

> To run this example, rename `10-persistence.xml` to `persistence.xml`

1. How can you make this example run without any exception?
Ans: Add CascadeType to @OneToOne in Employee and exception will go away.

2. How many tables will be created? Which table has the foreign key?
Ans: a.employees having foreign key
 b.parking_lot
 c.hibernate_sequence

3. How can you rename foreign key name to `plot_id`?
Ans: @JoinColumn(name = "plot_id")
   private ParkingSpace parkingSpace;

4. How can you create bidirectional mapping between `Employee` and `ParkingSpace`?
Ans: We can create bidirectional relationship by adding this line to ParkingSpace.java:
    @OneToOne(mappedBy = "parkingSpace")
    private Employee employee

5. Create an employee and assign them a parking lot. Make sure if you fetch parking employee is also fetched.
Now, how can you delete the parking lot?
Ans:   a. Either you chnage CascadeType to ALL and add entityManager.remover(ParkingSpace p) in OneToOneApp.java
    b.Or remove cascadeType attribute and persist ParkingSpace explicitly and then
    add entityManager.remover(ParkingSpace p) in OneToOneApp.java